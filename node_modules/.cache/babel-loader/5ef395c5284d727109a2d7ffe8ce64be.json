{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Office\\\\Desktop\\\\React\\\\Project\\\\project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport EditMovie from './EditMovie';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState(state => ({\n        movies: newMovieList\n      }));\n    };\n\n    this.searchMovie = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.addMovie = async movie => {\n      await axios.post(`http://localhost:3002/movies/`, movie);\n      this.setState(state => ({\n        movies: state.movies.concat([movie])\n      }));\n      this.getMovies();\n    };\n\n    this.editMovie = async (id, updatedMovie) => {\n      await axios.put(`http://localhost:3002/movies/${id}`, updatedMovie);\n      this.getMovies();\n    };\n  }\n\n  async componentDidMount() {\n    // this.getMovies();\n    const baseURL = \"http://localhost:3002/movies\";\n    const response = await fetch(baseURL);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      movies: data\n    });\n  } // async getMovies() {\n  //     const response = await axios.get(\"http://localhost:3002/movies\");\n  //     this.setState({ movies: response.data })\n  // }\n  // DELETE MOVIE\n\n\n  render() {\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    }).sort((a, b) => {\n      return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-12\",\n                  children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                    searchMovieProp: this.searchMovie\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n                movies: filteredMovies,\n                deleteMovieProp: this.deleteMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            render: _ref => {\n              let {\n                history\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(AddMovie, {\n                onAddMovie: movie => {\n                  this.addMovie(movie);\n                  history.push(\"/\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit/:id\",\n            render: props => /*#__PURE__*/_jsxDEV(EditMovie, { ...props,\n              onEditMovie: (id, movie) => {\n                this.editMovie(id, movie);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Office/Desktop/React/Project/project/src/components/App.js"],"names":["React","MovieList","SearchBar","AddMovie","EditMovie","axios","BrowserRouter","Router","Routes","Route","App","Component","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","searchMovie","event","target","value","addMovie","post","concat","getMovies","editMovie","updatedMovie","put","componentDidMount","baseURL","response","fetch","console","log","data","json","render","filteredMovies","name","toLowerCase","indexOf","sort","a","b","history","push","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport EditMovie from './EditMovie';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n\n    state = {\n        movies: [],\n        searchQuery: \"\"\n    }\n\n   async componentDidMount() {\n        // this.getMovies();\n    const baseURL = \"http://localhost:3002/movies\";\n    const response = await fetch(baseURL)\n    console.log(response)\n    const data = await response.json()\n    console.log(data)\n    this.setState({movies: data})\n    }\n\n    // async getMovies() {\n    //     const response = await axios.get(\"http://localhost:3002/movies\");\n    //     this.setState({ movies: response.data })\n    // }\n\n    \n\n\n    // DELETE MOVIE\n    deleteMovie = async (movie) => {\n\n        axios.delete(`http://localhost:3002/movies/${movie.id}`)\n        const newMovieList = this.state.movies.filter(\n            m => m.id !== movie.id\n        );\n        this.setState(state => ({\n            movies: newMovieList\n        }))\n    }\n\n\n    // SEARCH MOVIE\n    searchMovie = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n\n    // ADD MOVIE\n    addMovie = async (movie) => {\n        await axios.post(`http://localhost:3002/movies/`, movie)\n        this.setState(state => ({\n            movies: state.movies.concat([movie])\n        }))\n\n        this.getMovies();\n    }\n\n        // EDIT MOVIE\n        editMovie = async (id, updatedMovie) => {\n            await axios.put(`http://localhost:3002/movies/${id}`, updatedMovie)\n            this.getMovies();\n        }\n\n    render() {\n\n        let filteredMovies = this.state.movies.filter(\n            (movie) => {\n                return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\n            }\n        ).sort((a, b) => {\n            return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n        });\n\n        return (\n            <Router>\n\n                <div className=\"container\">\n\n                    <Routes>\n\n\n                        <Route path=\"/\" exact render={() => (\n                            <React.Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <SearchBar searchMovieProp={this.searchMovie} />\n                                    </div>\n                                </div>\n\n\n                                <MovieList\n                                    movies={filteredMovies}\n                                    deleteMovieProp={this.deleteMovie}\n\n                                />\n                            </React.Fragment>\n                        )}>\n\n                        </Route>\n\n                        <Route path=\"/add\" render={({ history }) => (\n\n                            <AddMovie\n\n                                onAddMovie={(movie) => {\n                                    this.addMovie(movie)\n                                    history.push(\"/\")\n                                }\n                                }\n\n                            />\n\n                        )}>\n\n                        </Route>\n\n                        <Route path=\"/edit/:id\" render={(props) => (\n\n                            <EditMovie\n                                {...props}\n                                onEditMovie={(id, movie) => {\n                                    this.editMovie(id, movie)\n                                }\n                                }\n\n                            />\n\n                        )}>\n\n                        </Route>\n\n                    </Routes>\n                </div>\n\n            </Router>\n        )\n\n    }\n\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}