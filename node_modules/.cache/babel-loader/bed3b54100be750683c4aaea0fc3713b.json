{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Office\\\\Desktop\\\\React\\\\Project\\\\project\\\\src\\\\App.js\";\nimport React from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport EditMovie from './EditMovie';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState(state => ({\n        movies: newMovieList\n      }));\n    };\n\n    this.searchMovie = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.addMovie = async movie => {\n      await axios.post(`http://localhost:3002/movies/`, movie);\n      this.setState(state => ({\n        movies: state.movies.concat([movie])\n      }));\n      this.getMovies();\n    };\n\n    this.editMovie = async (id, updatedMovie) => {\n      await axios.put(`http://localhost:3002/movies/${id}`, updatedMovie);\n      this.getMovies();\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    this.setState({\n      movies: response.data\n    });\n  } // DELETE MOVIE\n\n\n  render() {\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    }).sort((a, b) => {\n      return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  searchMovieProp: this.searchMovie\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n              movies: filteredMovies,\n              deleteMovieProp: this.deleteMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: _ref => {\n            let {\n              history\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(AddMovie, {\n              onAddMovie: movie => {\n                this.addMovie(movie);\n                history.push(\"/\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          render: props => /*#__PURE__*/_jsxDEV(EditMovie, { ...props,\n            onEditMovie: (id, movie) => {\n              this.editMovie(id, movie);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Office/Desktop/React/Project/project/src/App.js"],"names":["React","MovieList","SearchBar","AddMovie","EditMovie","axios","BrowserRouter","Router","Routes","Route","App","Component","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","searchMovie","event","target","value","addMovie","post","concat","getMovies","editMovie","updatedMovie","put","componentDidMount","response","get","data","render","filteredMovies","name","toLowerCase","indexOf","sort","a","b","history","push","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport EditMovie from './EditMovie';\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  state = {\n    movies: [],\n    searchQuery: \"\"\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    this.setState({ movies: response.data })\n  }\n\n\n\n\n  // DELETE MOVIE\n  deleteMovie = async (movie) => {\n\n    axios.delete(`http://localhost:3002/movies/${movie.id}`)\n    const newMovieList = this.state.movies.filter(\n      m => m.id !== movie.id\n    );\n    this.setState(state => ({\n      movies: newMovieList\n    }))\n  }\n\n\n  // SEARCH MOVIE\n  searchMovie = (event) => {\n    this.setState({ searchQuery: event.target.value })\n  }\n\n\n  // ADD MOVIE\n  addMovie = async (movie) => {\n    await axios.post(`http://localhost:3002/movies/`, movie)\n    this.setState(state => ({\n      movies: state.movies.concat([movie])\n    }))\n\n    this.getMovies();\n  }\n\n  // EDIT MOVIE\n  editMovie = async (id, updatedMovie) => {\n    await axios.put(`http://localhost:3002/movies/${id}`, updatedMovie)\n    this.getMovies();\n  }\n\n  render() {\n\n    let filteredMovies = this.state.movies.filter(\n      (movie) => {\n        return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\n      }\n    ).sort((a, b) => {\n      return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n    });\n\n    return (\n      <Router>\n\n          <div className=\"container\">\n\n              \n\n\n                  <Route path=\"/\" exact render={() => (\n                      <React.Fragment>\n                          <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                  <SearchBar searchMovieProp={this.searchMovie} />\n                              </div>\n                          </div>\n\n\n                          <MovieList\n                              movies={filteredMovies}\n                              deleteMovieProp={this.deleteMovie}\n\n                          />\n                      </React.Fragment>\n                  )}>\n\n                  </Route>\n\n                  <Route path=\"/add\" render={({ history }) => (\n\n                      <AddMovie\n\n                          onAddMovie={(movie) => {\n                              this.addMovie(movie)\n                              history.push(\"/\")\n                          }\n                          }\n\n                      />\n\n                  )}>\n\n                  </Route>\n\n                  <Route path=\"/edit/:id\" render={(props) => (\n\n                      <EditMovie\n                          {...props}\n                          onEditMovie={(id, movie) => {\n                              this.editMovie(id, movie)\n                          }\n                          }\n\n                      />\n\n                  )}>\n\n                  </Route>\n\n           \n          </div>\n\n      </Router>\n     \n    )\n\n  }\n\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}